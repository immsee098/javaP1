[ java 18강 - 2차 테스트]


1. 17강 2차_이벤트처리2.png 파일을 참고하여 화면 디자인과 이벤트 처리에 대한 코드를 작성하시오.

더하기 버튼을 클릭하면 두 수를 더한 후 결과 TextField에 보여준다
화면 지우기 버튼을 클릭하면 모든 TextField 의 내용을 지운다
숫자를 입력하지 않은 경우에는 Exception 처리를 하여 결과 TextField에 에러 메시지를 보여준다.


package com.java1022;

import java.awt.Button;
import java.awt.Color;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.Label;
import java.awt.Panel;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Test1 extends Frame {
	private Panel p1, p2, p3,p4;
	private Label lb1,lb2, lb3;
	private TextField tf1, tf2, tf3;
	private Button bt1, bt2;
	
	public Test1() {
		super();
		this.setBackground(Color.pink);
		p1= new Panel();		
		p2= new Panel();
		p3= new Panel();
		p4= new Panel();
		
		lb1 = new Label("첫번째 숫자");
		lb2 = new Label("두번째 숫자");
		lb3 = new Label("세번째 숫자");
		
		tf1 = new TextField();
		tf2 = new TextField();
		tf3 = new TextField();
		
		bt1 = new Button("더하기");
		bt2 = new Button("화면 지우기");
		
		p1.add(lb1);
		p1.add(tf1);
		p2.add(lb2);
		p2.add(tf2);
		p3.add(lb3);
		p3.add(tf3);
		p4.add(bt1);
		p4.add(bt2);
		
		this.add(p1);
		this.add(p2);
		this.add(p3);
		this.add(p4);
		
		addEvent();
	}

	private void addEvent() {
		bt1.addActionListener(new EventHandler());
		bt2.addActionListener(new EventHandler());
		
	}
	
	class EventHandler implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			System.out.println(e.getSource());
		
			if(e.getSource()==bt2) {
				tf1.setText("");
				tf2.setText("");
				tf3.setText("");
			}
			if(tf1.getText()!=null && tf2.getText()!=null && !tf1.getText().equals("") && !tf2.getText().equals("")) {
				int adder = Integer.parseInt(tf1.getText()) + Integer.parseInt(tf2.getText());
				tf3.setText(adder+"");
			} else {
				tf3.setText("숫자를 입력하세요");
			}
			
		}
		
	}

	public static void main(String[] args) {
		Test1 f = new Test1();
		f.setLayout(new GridLayout(4, 1));
		f.setSize(400, 300);
		f.setVisible(true);
	}

}




[ java 19강 - 1차 테스트]

1. 19강_ JTable.png 파일을 참고하여 
조회 버튼을 클릭하면 임의의 데이터를 JTable에 출력하는 코드를 작성하시오.

package com.java1022;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class Test2 extends JFrame implements ActionListener {
	JTable table;
	JButton bt;
	JScrollPane scrollPane;
	String[] colNames = {"번호", "이름", "전화번호"};
	String[][] data = {
			{"1", "홍길동", "010-100-2000"},
			{"2", "김연아", "010-200-5000"},
			{"3", "윤아", "010-300-7000"}	};
	DefaultTableModel model = new DefaultTableModel();
	
	public Test2() {
		super();
		init();
		addEvent();
	}
	
	private void addEvent() {
		bt.addActionListener(this);
		
	}

	private void init() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		table = new JTable();
		bt = new JButton("조회");
		
		model.addColumn("번호");
		model.addColumn("이름");
		model.addColumn("전화번호");
		
		table.setModel(model);
		scrollPane = new JScrollPane(table);
	
		add(scrollPane,"Center");
		add(bt, "North");
		
	}

	public static void main(String[] args) {
		Test2 f = new Test2();
		f.setSize(300,300);
		f.setVisible(true);
	}
	
	public void actionPerformed(ActionEvent e) {
		if(e.getSource()==bt) {
			model.setDataVector(data, colNames);
			table.setModel(model);
		}
		
	}

}


