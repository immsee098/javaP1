[ java 5강 - 2차 테스트]

1.  클래스란?
객체를 만들기 위한 틀
속성과 기능


2. 성적(Score) 클래스 만들기

멤버변수(필드)  : 국,영,수
메서드
-총점 구하는 메서드, 
-평균 구하는 메서드
생성자 

메인 메서드에서
총점, 평균을 구하는 메서드를 호출하여 총점과 평균을 구한 후
결과를 화면에 출력한다. (세 과목의 점수는 임의의 값을 넣는다)


class Score {
	int kor;
	int eng;
	int math;
	
	Score(int p_kor, int p_eng, int p_math) {
		kor = p_kor;
		eng = p_eng;
		math = p_math;
	}
	
	int total() {
		return kor+eng+math;
	}
	
	double average() {
		return total()/3.0;
	}
}

public class ScoreTest2 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("국어 영어 수학 입력");
		int kor = sc.nextInt();
		int eng = sc.nextInt();
		int math = sc.nextInt();
		
		Score a = new Score(kor, eng, math);
		System.out.println(a.average());

	}

}


3. 접근 제한자란
외부에서 클래스에 제한하지 못하게 하는 것


4. 접근 제어자가 사용될 수 있는 곳은?
클래스명, 멤버변수, 메서드, 생성자


5. 4가지 접근 제한자를 접근 범위가 넓은 쪽에서 좁은 쪽의 순으로 왼쪽부터 나열하고,
각각에 대해 설명하시오.
public protected default private
전체 / 자식클래스 /  동일 패키지 / 같은 클래스

6. 클래스와 생성자에 사용가능한 접근제한자는?
public, default


7. 멤버변수와 메서드에 사용가능한 접근제한자는?
public, proteced, default, private


8. 지역변수에도 접근제한자를 사용할 수 있나?
x안됨


9. 클래스를 만들때 일반적으로 멤버변수는 외부에 대해 숨기고, 대부분의 메서드는 노출한다.
멤버변수는 접근 제한자를 (  private   )으로 하여 클래스 외부에서 접근불가, 내부에서만 접근 가능하도록 하고,
메서드는 접근 제한자를 (  public   )으로 하여 외부에서도 접근 가능하도록 한다.

10. 다음 코드에서 컴파일 에러가 나는 곳은 어디인가?
왜 에러가 나는가?

class PrivateTest
{
	public static void main(String[] args) 
	{
		AAA obj = new AAA();
		obj.display();
		System.out.println("x=" + obj.x);  <<<<<이부분 오류남, private는 클래스 밖에서 변수명.~ 식으로 참조 불가능
	}
}
class AAA
{
	private int x=10;

	public void display() 
	{
		System.out.println("x=" + x);
	}
}


11. 클래스 디자인시 데이터에 해당하는 필드는 private으로 선언한다.
멤버변수의 값을 가져오거나 변경하기 위해서 (  get/set   ) 메서드를 만들어 사용한다.


12. this란?
자기 자신을 가리키는 것.(자신의 멤버를 가리킴)


13. 이름, 나이를 갖는 Person 클래스를 작성하시오.
데이터 - 이름, 나이
기능 - 설정되어 있는 이름, 나이를 출력하는 기능
생성자,  getter/setter 만들기
main에서 메서드 호출한 후, setter로 멤버변수를 변경하고, getter를 이용해 출력하기

class Testper {
	private String name;
	private int age;
	
	Testper(String name, int age) {
		this.name = name;
		this.age = age;
	}
	
	
	public String getName() {
		return name;
	}
	
	public void setName(String p_name) {
		name = p_name;
	}
	
	public int getAge() {
		return age;
	}
	
	public void setAge(int p_age) {
		age = p_age;
	}
	
	public void showInfo() {
		System.out.println("이름은 "+name);
		System.out.println("나이는 "+age);
	}
}

public class PersonTest {

	public static void main(String[] args) {
		Testper p1 = new Testper("홍길동", 13);
		p1.setAge(20);
		p1.setName("김길동");
		
		System.out.println(p1.getAge());
		System.out.println(p1.getName());

	}

}



14. 요소 3개를 갖는 float타입의 배열을 선언하고, 임의의 값을 넣고, 화면에 출력하시오.
(for문, 확장 for문을 각각 사용)

1) 배열선언, 메모리할당, 초기화를 모두 따로
float[] arr;
arr = new float[3];
arr[0] = 13.5f;
arr[1] = 5.6f;
arr[2] = 3.5f;

2) 모두 동시에
float[] arr = {13.5f, 5.6f, 3.5f};

for(int i=0;i<arr.length ;i++ ){  
	System.out.println(arr[i]);
}

for(float n: arr ){  
	System.out.println(n);
}
