[ java 1강 - 2일차 테스트]

1.  해당하는 기본 자료형을 쓰고, 크기(byte)와 기억 가능 범위를 적으시오. 
	(기억 가능 범위는 정수형인 경우만 쓸 것)

	숫자형 
		정수형 
			1) byte /1바이트/-127~178
			2) short /2바이트/32000
			3) int /4바이트/21억
			4) long /8바이트/922경

		실수형
			1) float /4바이트
			2) double /8바이트
	문자형 - char/2바이트 
	논리형 -  boolean/1바이트


2. 실수형은 값의 표현 범위보다 (  정밀도  )를 우선시하여 선택해야 한다.
	float  - 대략 소수점 이하 ( 7 )자리 까지 유효
	double - 대략 소수점 이하 (  15  )자리 까지 유효


3. 논리형에 들어가는 값은?
true / false



4. char  -	영문자나 한글과 같은 문자 ( 1개 )를 저장해서 사용
		char 형 변수에 값 저장시 ( '  ' ) 로 묶어서 저장
		문자 하나를 변수에 저장하면 실제로는 해당 문자의 ( 유니코드 )이 저장된다
		(char은 실상 숫자형 자료형 => 연산도 가능함)


5. 문자열을 다룰 때 사용하며, 값 저장시 " " (큰 따옴표) 를 사용하는 참조형 자료형은?
~> String


6. long 변수의 값에는 ( L )을 붙여야 하고, float 변수의 값에는 ( F )를 붙여야 한다.


7. 지역 변수란?
~> { }로 묶인 블록 단위 아래서 선언된 변수이다


8. 지역변수는 반드시 (  초기화  )해야 한다.
(   초기화  )하지 않고, 사용하면 Error난다.


9. 변수의 종류 3가지를 쓰시오.
~> 멤버 변수 / 클래스 변수 / 지역 변수


10. 자료형 대체 클래스로, 기본형 변수들도 때로는 객체로 다루어져야 하는 경우가 있는데, 
이 때 사용되는 것이 무슨 클래스인가? 
Boolean, Character, Integer, Byte 등이 이에 해당한다.
~> wrapper


11. 표현하기 어려운 문자 상수를 표현할 수 있는 방법으로,
문자열 안에서 특별한 의미로 해석되는 문자를 가리켜 무엇이라 하는가?
~>이스케이프 시퀸스
개행(줄바꿈)  => \n
탭	 =>	\t
큰 따옴표	 => \"
역슬래시	 => \\


12. 자바의 자료형에는 기본 자료형(값 타입)과 참조형(참조타입)이 있다.
변수의 실제 값을 가지고 있으며, 메모리의 스택에 저장되는 것은  ( 자료형 ) 이고, 
실제 값은 다른 곳에 있으며 값이 있는 주소를 가지고 있어서 나중에 그 주소를 참조해서 값을 가져올 수 있는 것은
(  참조형  ) 이다. 


13. 참조형은 메모리의 ( 힙 )에 실제 값을 저장하고 그 참조값을 갖는 변수는 스택에 저장한다.




14. 주민번호를 담을 변수를 선언하고, 값을 할당한 후 출력하시오.
예) 주민번호 : 900102-1112222
String a = "900102-1112222";
System.out.println("주민번호 : " + a);
 

15. 상품 수량을 담을 변수를 선언하고, 값을 할당한 후 출력하시오.
예) 수량 : 3
int b = 3;
System.out.println("수량 : " + b);



16. 원래의 자료형이 아닌 다른 자료형으로 변환 되는 현상을 형변환이라고 하는데,
형변환은 (  연산  ) 및 (  대입  )에서 발생한다.

17. boolean을 제외한 나머지 7개의 기본형은 서로 형변환이 가능하다.
 이때 사용되는 자동 현변환 규칙을 값의 범위가 작은 자료형부터 나열하시오
byte->short->int
		-> long -> float -> double
char->int
	


18. 형변환의 종류에는 자동형변환, 명시적 형변환이 있다.
대입의 경우 언제 명시적 형변환해야 하나?
~> 위의 표에서 큰 타입에서 작은 타입으로 바뀔 때는 명시적으로 형변환을 해줘야 함


19. int 변수, double 변수, byte 변수를 선언하고, 임의의 값을 할당한 후
결과값을 받는 변수를 선언하여 (int변수 + double변수 + byte변수) 연산하기
~>
int a = 111;
double b = 1.1D;
byte c = 1;
double d = a + b + c; //113.1D



20. double 변수를 선언하고, 임의의 값을 할당한 후, long 변수에 다시 할당하기
~>
double do = 2.2D;
long lo = (long)do;




21. 다음 코드를 완성하시오
char ch = 'd';
(        int unicode = ch;         )  //ch의 유니코드 값을  임의의 변수에  할당
(            char ar = (char)(ch+3);        )  //ch에 3을 더한 값을 char 변수에 할당

int i = 66;
(           char in = (char)i;                  ) //i 변수 값에 해당하는 문자를 임의의 변수에 할당

