[ java 7강 - 1차 테스트]

1.  (1) 의 코드를 완성하시오

class Car {
	private String color;	// 색상
	private String gearType;	// 변속기 종류 - auto(자동), manual(수동)
	private int door;		// 문의 개수

	Car() {
		(1) 회색, 수동, 문 2개인 차로 셋팅
		this("gray", "auto", 2);


	}
	Car(String color, String gearType, int door) {
		this.color = color;
		this.gearType = gearType;
		this.door = door;
	}
	public void showInfo(){
		System.out.println("color:" + color + ", gearType:" + gearType+ ", door:"+door);
	}
}


2.  컴파일러에 의해 자동으로 삽입되는 생성자를 직접 작성하시오.

class Test{
	int age;

}

class AAA extends Test{
	super();
	int num;

}

class BBB extends Test{
	String name;

	BBB(){	
		super();	
		name="홍길동";
	}
}


3.  final 이 사용될 수 있는 곳은?
클래스, 변수들, 메서드


4. 클래스 앞에 final이 붙으면 (     변경할 수 없는 클래스. 부모로도 사용x          )
메서드 앞에 final이 붙으면 (    변경할 수 없는 메서드.       )
멤버변수나 지역변수 앞에 final이 붙으면  (      값변경이 불가능해짐         )


5. 한 번 초기화되면 더 이상 값을 변경할 수 없는 멤버를 무엇이라 하는가?
상수, final


6. 맞으면 O, 틀리면 X 표시하시오
final 을 지역변수로 선언하고자 한다면 static 도 함께 사용할 수 있다. (  O   )
지역변수 앞에 final을 붙일 수 있다. (  O   )
지역변수 앞에 접근 제한자를 붙일 수 있다(  X   )


7. final 변수는 상수지만 선언과 함께 초기화 하지 않고
   (     생성자에서만 초기화    ) 할 수 있다. 
   각 인스턴스마다 다른 값을 갖도록 할 수 있다. 


8. static final 변수는 선언과 함께 초기화하며, 
 클래스 차원에서 (   1개민 생성   )되고, 모든 인스턴스가 (  동일값 가짐  )



9. 클래스를 재사용하는 2가지 방법에 대해 설명하시오.
상속과 포함관계를 이용한다.


10. 이자율을 상수로 선언하고, 이자를 계산하는 클래스를 만들고
main() 메서드에서 입금액을 입력 받아서 이자 계산 메서드를 호출하여 이자 계산 후 출력하는 코드를 작성하시오.
(원금, 이자율, 이자를 출력)

은행계좌 클래스 (Account)
상수 - 이자율(INTEREST_RATE) : 2%
메서드 - 이자 계산하는 메서드(입금액을 매개변수로 입력 받아서 이자를 계산한 후 결과를 리턴)
class Account {
	private final float INTEREST_RATE = 0.1f;
	private int interest;

	
	int accountInterest(int money) {
		interest = (int)(money*INTEREST_RATE);
		return interest;
	}
}


11. 다음 클래스를 이용하여 코드를 완성하시오.

class Circle {
	private int r;

	Circle(int r){
		this.r = r;
	}

	public double findArea() {
		return  Math.PI*r*r;
	}
}//

class JavaExam1 {
	public static void main(String[] args) {
		//(1) Circle 배열을 만들고, 요소 3개를 저장한 후, 

		Circle[] ci = new Circle[3];
		ci[0] = new Circle(10);
		ci[1] = new Circle(20);
		ci[2] = new Circle(30);
		//각 요소의 면적 계산 메서드 호출하고, 면적 출력
		System.out.println(ci[0].findArea());
		System.out.println(ci[1].findArea());
		System.out.println(ci[2].findArea());
	}
}


12. 포함관계를 이용한 코드를 완성하시오. 
class Point{	
	int x;
	int y;
	
	Point(int x, int y){
		this.x=x;
		this.y=y;
	}
}//class

class Circle{	
	private Point p;
	private int r;

	//(1) 생성자
		Circle(Point p, int r){
		this.p = p;
		this.r = r;
	}


	//출력 메서드
	public void printInfo(){
		//(2) x, y 출력
		System.out.println(p.x);
		System.out.println(p.y);

		System.out.println("r=" + r+"\n");
	}
}//class

class HasaTest3{
	public static void main(String[] arg){
		//(3) Circle 객체 생성후 printInfo() 메서드 호출
		Point p = new Point(10,20);
		Circle ci = new Circle(p, 5);
		ci.printInfo();


	}
}



[ java 8강 - 1차 테스트]

1.  환경변수 path 와 classpath 에 대해 설명하시오.
.exe파일을 찾는 경로 / .class 파일을 찾는 경로. 클래스가 있는 곳을 의미
 

2. 클래스는 물리적으로 하나의 (  .class 파일   )이고,
패키지는 물리적으로 하나의 (    클래스의 묶음      )이다. 


3.  패키지 선언 형식을 쓰시오.
package ~~패키지이름;


4. 패키지 선언문은 반드시 소스파일에서 주석과 공백을 제외한 (      천번째  ) 문장이어야 하고,
하나의 소스파일에 단 한번만 선언될 수 있다.
모든 클래스는 반드시 하나의 패키지에 포함되어야 한다.


5. 패키지의 (  상위 디렉토리   )를 클래스패스에 포함시켜야 한다.


6. c:\AA\BB\CC\Test.class

BB.CC.Test  obj = new BB.CC.Test();

BB, CC는 패키지로 선언되어 있다.
(     c:\\AA     ) 디렉터리가 클래스패스에 등록되어 있어야 한다.


7. 접근 불가여서 에러나는 곳을 표시하시오.

1) MyHerb.class

package com.herb;
public class MyHerb {
	protected String tel;
	int grade;
	public String addr;
}

----------------------
2) TestPackage.class

package com;
import com.herb.*;
class ChildHerb extends MyHerb{
	public  void printInfo(){
		System.out.println("MyHerb  protected tel : " + tel);  
		System.out.println("MyHerb  default grade : " + grade);  <<요기
		System.out.println("MyHerb  public addr : " + addr);
	}
}//class

public class TestPackage2{
	public static void main(String[] args) {
		MyTest1 m1=new MyTest1(); 
		m1.display1();
		System.out.println("MyTest1  protected name : " + m1.name);
		System.out.println("MyTest1  default age : " + m1.age);
		System.out.println("MyTest1  public job : " + m1.job);

		MyHerb h=new MyHerb();  
		h.displayHerb();
		System.out.println("MyHerb  protected tel : " + h.tel);  <<여기
		System.out.println("MyHerb  default grade : " + h.grade); <<여기
		System.out.println("MyHerb  public addr : " + h.addr);

	    	ChildHerb ch = new ChildHerb();		
		System.out.println("ChildHerb, MyHerb  default tel : " + ch.tel);  <<여기
		System.out.println("ChildHerb, MyHerb  protected grade : " + ch.grade);  <<여기
		System.out.println("ChildHerb, MyHerb  public addr : " + ch.addr);
	}
}