[ java 5강 - 1차 테스트]

1.  객체 지향 프로그래밍이란?
행동을 그대로 본따서 만든 프로그래밍

2. 객체는 (  상태정보 ) 와 (  행동  ) 으로 구성된다.
상태정보는 (  변수   ) 를 통해서 표현되고,
행동은 (   메소드   ) 를 통해 표현된다


3. 클래스란?
객체를 만들기 위한 틀
속성과 기능으로 이루어져있음


4. 객체 생성 방법을 쓰시오.
클래스이름 변수이름 = new 클래스이름();


5. Account 클래스의 객체를 생성하고,
멤버변수인 balance에 200000을 저장한 후
showInfo()메서드를 호출하시오.

class Account {

	int balance; 

	public void deposit(int money) {
		balance += money;
	}
	
	//출력 메서드
	public void showInfo() {
		System.out.println("잔액:"+balance+"\n");
	}
	
} 


아래 void main에
Account acc = new Account();
acc.showInfo();


6. ( )안에 공통으로 들어가는 용어는?
객체 지향 언어는 소스코드의 재사용이 쉽고, 실세계와도 유사한 개념인 객체로 프로그램을 구성한 것으로
필요한 기능을 부품처럼 미리 만들어 놓고, 필요한 경우 바로 사용하여 구현할 수 있다.
(      )는 클래스가 메모리에 load된 것으로 클래스는 코드, 이 코드를 메모리에 띄운 것이 (       )이다.
클래스는 직접 사용할 수 없고 클래스를 통해 (        ) 를 생성해야만 그 (       ) 를 사용할 수 있다.

~> 객체


7. 직사각형을 나타내는 MyRectangle 클래스를 디자인하시오.
멤버변수(필드) - 가로, 세로
메서드 - 넓이를 구하는 기능
	   둘레를 구하는 기능

메인 클래스의 main() 메서드에서 임의의 가로, 세로값을 이용하여
MyRectangle 클래스의 메서드를 호출하여 넓이와 둘레를 구한 후 화면에 출력한다.

class Rectangle {
	int width;
	int height;
	
	public int recArea() {
		return width*height;
	}
	
	public int recGi() {
		return (width+height)*2;
	}
}

public class Test04 {

	public static void main(String[] args) {
		
		Rectangle r1 = new Rectangle();
		
		r1.width =20;
		r1.height= 30;
		System.out.println(r1.recArea());

	}

}



8. ()안에 공통으로 들어가는 용어는?
어떤 클래스로부터 만들어진 객체를 그 클래스의 (            )라고 한다.
객체는 모든 (            )를 대표하는 포괄적인 의미이고,
(            )는 어떤 클래스로부터 만들어진 것인지를 강조하는 보다 구체적인 의미이다.

~> 인스턴스


9. 생성자란?
객체가 생성될 때 맨 처음 기본으로 실행되는 메서드


10.  생성자의 이름은 ( 클래스명  ) 과 동일해야 하고, 
매개변수는 가질 수 있으나 ( 반환값 )은 가질 수 없다.


11. 객체 생성 문장에는 호출될 생성자를 명시하는 부분이 존재한다.
아래 객체 생성 문장에서 생성자를 호출하는 부분은?
클래스이름   변수이름   =   new    <<클래스이름(  [매개변수]  );>> ~>여기부분



12. 기본 생성자(default 생성자)는 매개변수를 가지지 않는 생성자로
컴파일러에 의해  자동으로 만들어진다.
하지만 다른 생성자가 있으면 (    기본 생성자가 만들어지지 않음          )





13. 5개의 숫자를 사용자로부터 입력 받아서 배열에 넣고, 내림차순으로 정렬한 후 출력하시오.
예) 10,30,40,20,50 => 10,20,30,40,50

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[] arr = {10,20,30,40,50};
		
		for(int i=0; i<arr.length; i++) {
			for(int j=0; j<arr.length; j++) {
				if(arr[i]<=arr[j]) {
					int temp = 0;
					temp = arr[i];
					arr[i] =arr[j];
					arr[j] = temp;
				}
			}
		}
		
		System.out.println(arr[0]);
		
		System.out.println("===내림차순으로 정렬====");
		
		for(int i=0; i<arr.length; i++) {
			System.out.print(arr[i]+"\n");
		}

	}


14. 다음은 알파벳과 숫자를 아래에 주어진 암호표로 암호화하는 프로그램이다.
(1)에 알맞은 코드를 넣어서 완성하시오.

class Encrypt {
	public static void main(String[] args) 	{
		char[] abcCode =
			{ '`','~','!','@','#','$','%','^','&','*',
			'(',')','-','_','+','=','|','[',']','{',
			'}',';',':',',','.','/'};	
 			            
		char[] numCode = {'q','w','e','r','t','y','u','i','o','p'};

		String src = "abc123";
		String result = "";
		
		// 문자열 src의 문자를 charAt()으로 하나씩 읽어서 변환 후 result에 저장
		for(int i=0; i < src.length();i++) {
			char ch = src.charAt(i);

			//(1) 

				if(ch>=97 && ch<=122) {
					int ch2 = ch-97;
					result += abcCode[ch2];
					
				} else if(ch>=48 && ch<=57) {
					int ch2 = ch-48;
					result += numCode[ch2];
				}
			



		}

		System.out.println("src:"+src);
		System.out.println("result:"+result);
	}
}
